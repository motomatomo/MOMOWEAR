@using System.Net
@using momoWear.Models
@using PagedList
@using PagedList.Mvc
@model IPagedList<momoWear.Models.tclothes>

@*@model IEnumerable<momoWear.Models.tclothes>*@


@{
    ViewBag.Title = ViewBag.userName + "你好";
}
@section styles{
    <style>
        .img-fluid {
            transition: transform 0.3s;
        }
        .img-fluid:hover {
            transform: scale(3);
         }
    </style>
    
    }
@{
    <link href="~/Content/PagedList.css" rel="stylesheet" />

    //下拉選單選項
    List<SelectListItem> list = new List<SelectListItem>();
    //為了接TempData["fcategoryNameResult"]創的陣列
    List<tcategory> listTcategory = new List<tcategory>();

    foreach (var item in (TempData["fcategoryNameResult"] as List<tcategory>))
    {
        listTcategory.Add(item);

    }



    foreach (var item in listTcategory)
    {
        list.Add(new SelectListItem()
        {
            Text = "類別代號" + item.fid + " " + item.fcategoryID + " " + item.fcategoryName,
            Value = item.fid.ToString(),
            Selected = false
        }
        );
    }


}


<!-- Modal -->
<div class="modal fade" id="dialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">提示</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">


                @if (TempData["noFound"] != null)
                {
                    <h3>@TempData["noFound"] </h3>
                }
                @if (TempData["reSearh"] != null)
                {
                    <h3>@TempData["reSearh"] </h3>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>



<div class="row">

    <p>
        @Html.ActionLink("新增產品", "Create", "Product", new { @class = "btn btn-outline-dark my-5" })
    </p>
</div>



@using (@Html.BeginForm())
{
    if (TempData["mpick"] != null)
    {<div class="form-group col-12 col-lg-3 col-md-3">

            <select id="mpick" name="mpick" class="form-control" data-selected-value="@TempData["mpick"]">
                <option>選擇搜關鍵字分類</option>
                <option value="商品名稱" name="ProductName">商品名稱</option>
                <option value="商品類別" name="Gategory">商品類別</option>
                <option value="顏色" name="Color">顏色</option>
                <option value="庫存不足商品" name="SoldOut">庫存不足商品</option>
            </select>
        </div>
    }
    else
    {
        <div class="form-group col-12 col-lg-3 col-md-3">
            <select id="mpick" name="mpick" class="form-control">
                <option>選擇搜關鍵字分類</option>
                <option value="商品名稱" name="ProductName">商品名稱</option>
                <option value="商品類別" name="Gategory">商品類別</option>
                <option value="顏色" name="Color">顏色</option>
                <option value="庫存不足商品" name="SoldOut">庫存不足商品</option>
            </select>
        </div>
    }







    <div class="col-12 col-lg-3 col-md-3">
        @Html.DropDownList("fcategoryName", list, htmlAttributes: new
    {
       @class = "form-control",
       @style = "display:none"
    })

    </div>
    <div class="form-group col-12 col-lg-3 col-md-3">
        @*<input type="text" name="txtKeyword" class="form-control" value="" id="txt" placeholder="請輸入關鍵字" />*@

        @Html.TextBox("txtKeyword", TempData["txtKeyword"] as string, new { @class = "form-control", placeholder = "請輸入關鍵字" })
    </div>

    <div class="form-group col-4 col-lg-3 col-md-3 ">
        <input type="submit" value="查詢" id="keyWorld" class="form-control" />
    </div>

}

<br /> 
<br />

@if (TempData["err"] != null)
{
    <div class="alert alert-danger"> @TempData["err"] </div>
}

<div class="table-responsive">
    <table class="table table-hover table-image align-middle">
        <tr>
            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().fserialNumber)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().tcategory.fcategoryID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fname)
            </th>

            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().fsize)
        </th>*@

            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fdescribe)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fcolor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fquentity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fsalesVolume)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fprice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fsalesdate)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().fsafetyStockLevel)
        </th>*@
            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().fmodifiedDate)
        </th>*@
            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().fbrand)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().fphotoPath)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.fserialNumber)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.tcategory.fcategoryID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fname)
        </td>

        @*<td>
            @Html.DisplayFor(modelItem => item.fsize)
        </td>*@

        <td>
            @Html.DisplayFor(modelItem => item.fdescribe)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fcolor)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fquentity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fsalesVolume)
        </td>
        <td class="priceper">
            @Html.DisplayFor(modelItem => item.fprice)

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.fsalesdate)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.fsafetyStockLevel)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.fmodifiedDate)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.fbrand)
        </td>*@
        <td>
            @*@Html.DisplayFor(modelItem => item.fphotoPath)*@
            <img src="~/images/@item.fphotoPath" class="img-fluid" alt="產品圖" />
        </td>

        <td>
            @Html.ActionLink("修改", "Edit", new { id = item.fid }, new { @class = "btn btn-outline-dark mb-2" })
            @*@Html.ActionLink("Details", "Details", new { id = item.fid }) |*@
            @*@Html.ActionLink("刪除", "Delete", "Product", new { id = item.fid}, new { @class = "btn btn-default", onclick = "return confirm('確定刪除?')" })*@
            @using (@Html.BeginForm("Delete", "Product", FormMethod.Post))
            {
                @Html.Hidden("id", item.fid)
                <input type="submit" value="刪除" class="btn btn-outline-danger " id="SubmitBtn" onclick="return confirm('確定要刪除?')" />
            }
        </td>
    </tr>
        }

    </table>
    @{ if (TempData["mpick"] != null && TempData["txtKeyword"] != null)
        {
            string mpick = TempData["mpick"].ToString();
            string txtKeyword = TempData["txtKeyword"].ToString();
            @Html.PagedListPager((IPagedList)Model, x => Url.Action("List", new { mpick = mpick, txtKeyword = txtKeyword, page = x }))
        }
        else if (TempData["mpick"] != null && TempData["txtKeyword"] == null)
        {
            string mpick = TempData["mpick"].ToString();

            @Html.PagedListPager((IPagedList)Model, x => Url.Action("List", new { mpick = mpick, txtKeyword = "", page = x }))
        }
        else if (TempData["mpick"] == null && TempData["txtKeyword"] == null)
        {
            @Html.PagedListPager((IPagedList)Model, x => Url.Action("List", new { mpick = "", txtKeyword = "", page = x }))
        }
        else if (TempData["mpick"] == null && TempData["txtKeyword"] != null)
        {
            string txtKeyword = TempData["txtKeyword"].ToString();
            @Html.PagedListPager((IPagedList)Model, x => Url.Action("List", new { mpick = "", txtKeyword = txtKeyword, page = x }))
        }


    }
    @*@Html.PagedListPager((IPagedList)Model, x => Url.Action("List", new RouteValueDictionary()
        {
            { "mpick" , Request.QueryString["mpick"] },
            { "txtKeyword" ,Request.QueryString["txtKeyword"] },
            {"page" , x }
        }))*@
</div>


@section scripts {
    <script>

        $(document).ready(function () {
            console.log("ready!");

            // 獲取下拉選單元素
            var select = document.getElementById("mpick");
            // 獲取自定義的 HTML 屬性值
            var selectedValue = select.getAttribute("data-selected-value");
            // 將屬性值設置到下拉選單中
            select.value = selectedValue;

        @{
            if((TempData["noFound"]!=null) || (TempData["reSearh"] != null))
            {
                @:$('#dialog').modal('show');
            }
        }
        });

        $('#mpick').change(function () {
            let pick =$('#mpick').val();
            console.log(pick);
            if (pick == "商品類別") {
                /*console.log(pick);*/
                $("#fcategoryName").slideDown(1000);
            } else { $("#fcategoryName").hide(1000); }
        })

         //售價去小數
        var moneyPer = [];
       
          @foreach (var item in Model)
        {
            @:moneyPer.push("@Convert.ToDouble(@item.fprice)");
           
        }
        var newmoneyPer = document.querySelectorAll('td.priceper');
        for (let index in moneyPer)
        {
            newmoneyPer[index].innerHTML = moneyPer[index];
        }
       
    </script>

}
